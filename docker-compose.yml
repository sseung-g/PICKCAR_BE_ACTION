version: "3.8"   # 도커 컴포즈 파일의 버전 (3.8은 대부분 최신 도커 기능을 지원함)

services:
  domain:
    build:
      context: ./domain
    container_name: domain-container
    ports:
      - "8080:8080"  # 외부:내부 포트
    environment:
      SPRING_PROFILES_ACTIVE: dev
    depends_on:
      - mysql
    networks:
      - backend

  mysql:
    image: mysql:latest
    container_name: mysql-container-test
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DEV_DB_NAME}
      MYSQL_USER: ${DEV_DB_USERNAME}
      MYSQL_PASSWORD: ${DEV_DB_PASSWORD}
    networks:
      - backend

networks:
  backend:
#services:
#  domain:        # domain 이라는 이름의 컨테이너(서비스)를 정의
#    build:       # 이 서비스를 빌드할 때 사용할 설정
#      context: ./domain # 현재 디렉토리 기준으로 빌드 (도커파일과 소스코드 위치)
#      dockerfile: Dockerfile  # 사용할 Dockerfile 이름 (현재 루트에 있는 파일)
#    container_name: domain-server  # 생성될 컨테이너 이름
#    ports:
#      - "8080:8080"   # 호스트(왼쪽) 8080 포트를 컨테이너(오른쪽) 8080 포트에 매핑
#    environment:
#      SPRING_PROFILES_ACTIVE: dev
#      # spring boot에서 활성화할 profile = dev
#      # application-dev.yml 파일을 기준으로 설정 적용
#    depends_on:
#      - mysql
#      # 이 서비스는 mysql 서비스가 먼저 실행된 후 시작됨
#      # 하지만 여기선 mysql은 정의되지 않았고 override.yml에 있음
#
#networks:
#  default: